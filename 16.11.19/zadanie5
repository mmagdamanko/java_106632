// Zastosuj nową wiedzę o Java 8. 
// Zaproponuj implementację obiektów: Person, VipPerson, UniversityPerson, Teacher, Student. 
// Sam zaproponuj co z czego dziedziczy/implementuje. 
// Zastosuj jeśli się da interfejsy i domyślne metody itp.
// Pokaż w klasie ZadaniePerson przykłady użycia.



public class ZadaniePerson {

    public static void main(String[] args) {


    }

}

abstract class Person
{
     String imie;
     String nazwisko;
     String zawod;
     String kolorOczu;
     String dataUrodzenia;
     String wyksztalcenie;
     double wzrost;
     double waga;

     Person()
     {
         System.out.println("Domyślny konstruktor klasy Person");
     }
     Person (String imie, String nazwisko, String zawod, String kolorOczu, String dataUrodzenia, String wyksztalcenie, double wzrost, double waga)
     {
         this.imie = imie;
         this.nazwisko = nazwisko;
         this.zawod = zawod;
         this.kolorOczu = kolorOczu;
         this.dataUrodzenia = dataUrodzenia;
         this.wyksztalcenie = wyksztalcenie;
         this.wzrost = wzrost;
         this.waga = waga;
     }

     void idzDoPracy()
     {
         System.out.println("idę do pracy");
     }
     void idzNaStudia()
     {
         System.out.println("idę na studia");
     }
}

abstract class VipPerson extends Person
{
    boolean czyVipPerson;
    int priorytet = 1;
    boolean czyDarmowyZUS = true;
    boolean bezKolejkiDoNFZ = true;

    VipPerson()
    {
        System.out.println("Domyślny konstruktor klasy VIPPerson");
    }
    VipPerson(String imie, String nazwisko, String zawod, String kolorOczu, String dataUrodzenia, String wyksztalcenie, double wzrost, double waga, boolean czyVipPerson)
    {
        super(imie, nazwisko, zawod, kolorOczu, dataUrodzenia, wyksztalcenie,wzrost, waga);
        this.czyVipPerson = czyVipPerson;
    }

    void setCzyVipPerson(boolean czyVipPerson)
    {
        this.czyVipPerson = czyVipPerson;
    }
    void setPriorytet(int priorytet)
    {
        this.priorytet = priorytet;
        System.out.println("Zmieniono piorytet: " + priorytet);
    }
}

abstract class UniversityPerson extends Person
{
    String nazwaUczelni;

}

class Teacher extends UniversityPerson
{
    String stopienNaukowy;
    boolean darmoweObiady = true;
    boolean dostepDoDziekanatu = true;

    void zrobKolokwium()
    {
        System.out.println("Dzisiaj jest kolokwium. Wyjmujemy karteczki!!!");
    }
    void ustalEgzamin()
    {
        System.out.println("Egzamin zrobimy na ostatnich zajęciach");
    }
    void uwalStudenta(Student x)
    {
        System.out.println("Dostajesz 2. Mozesz nie przychodzic na nastepne zajecia." + x );
    }
}

class Student extends UniversityPerson
{
    boolean statusStudenta = true;
    int aktualnyRokStudiow;
    int aktualnySemestr;

    void nieIdzNaWyklady()
    {
        System.out.println("Dzisiaj zostanę w domu...");
    }
    void idzNaEgzamin()
    {
        System.out.println("Ehhh dzisiaj egzamin... Nic nie umiem...");
    }

}
